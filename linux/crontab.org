#+SETUPFILE: ~/.emacs.d/org-other-file/org-level-1.org
#+TITLE: crotab-周期性执行任务自动化系统
#+KEYWORDS: linux-crontab
#+LANGUAGE: zh-CN
#+DATE:<2025-02-11/Tuesday 19:27:33>

* crontab简介
是用来定期执行程序的命令

当安装完成操作系统之后，默认便会启动此任务调度命

crond 命令每分锺会定期检查是否有要执行的工作，如果有要执行的工作便会自动执行该工作


* 而 linux 任务调度的工作主要分为以下两类：
   1 系统执行的工作：系统周期性所要执行的工作，如备份系统数据、清理缓存
   
   2 个人执行的工作：某个用户定期要做的工作，例如每隔10分钟检查邮件服务器是否有新信，这些工作可由每个用户自行设置

   
* 语法
crontab [ -u user ] file
或
crontab [ -u user ] { -l | -r | -e }
说明：
crontab 是用来让使用者在固定时间或固定间隔执行程序之用，换句话说，也就是类似使用者的时程表。

-u user 是指设定指定 user 的时程表，这个前提是你必须要有其权限(比如说是 root)才能够指定他人的时程表。如果不使用 -u user 的话，就是表示设定自己的时程表。

*** 参数说明：
-e : 执行文字编辑器来设定时程表，请先设定 VISUAL 环境变数来指定使用那个文字编辑器(比如说 setenv VISUAL joe)
直接-e编辑文件就可以了.   
-r : 删除目前的时程表
-l : 列出目前的时程表
-l只能暂时的列出文件内容,
其实文件在/var/spool/cron/crontab/Username

    
*** 时间格式如下：

#+begin_example
f1 f2 f3 f4 f5 program
其中 f1 是表示分钟，f2 表示小时，f3 表示一个月份中的第几日，f4 表示月份，f5 表示一个星期中的第几天。program 表示要执行的程序。
当 f1 为 * 时表示每分钟都要执行 program，f2 为 * 时表示每小时都要执行程序，其馀类推
当 f1 为 a-b 时表示从第 a 分钟到第 b 分钟这段时间内要执行，f2 为 a-b 时表示从第 a 到第 b 小时都要执行，其馀类推
当 f1 为 */n 时表示每 n 分钟个时间间隔执行一次，f2 为 */n 表示每 n 小时个时间间隔执行一次，其馀类推
当 f1 为 a, b, c,... 时表示第 a, b, c,... 分钟要执行，f2 为 a, b, c,... 时表示第 a, b, c...个小时要执行，其馀类推
    *    *    *    *    *
    -    -    -    -    -
    |    |    |    |    |
    |    |    |    |    +----- 星期中星期几 (0 - 7) (星期天 为0)
    |    |    |    +---------- 月份 (1 - 12) 
    |    |    +--------------- 一个月中的第几天 (1 - 31)
    |    +-------------------- 小时 (0 - 23)
    +------------------------- 分钟 (0 - 59)
    使用者也可以将所有的设定先存放在文件中，用 crontab file 的方式来设定执行时间。
#+end_example


* 实例


    - 每月每天每小时的第 0 分钟执行一次 /bin/ls
      0 * * * * /bin/ls

    - 在 12 月内, 每天的早上 6 点到 12 点，每隔 3 个小时 0 分钟执行一次 /usr/bin/backup
      0 6-12/3 * 12 * /usr/bin/backup

    - 周一到周五每天下午 5:00 寄一封信给 alex@domain.name
      0 17 * * 1-5 mail -s "hi" alex@domain.name < /tmp/maildata

    - 每月每天的午夜 0 点 20 分, 2 点 20 分, 4 点 20 分....执行 echo "haha"
      20 0-23/2 * * * echo "haha"
    
      下面再看看几个具体的例子：
      #+BEGIN_EXAMPLE
      0 */2 * * * /sbin/service httpd restart  意思是每两个小时重启一次apache 

      50 7 * * * /sbin/service sshd start  意思是每天7：50开启ssh服务 

      50 22 * * * /sbin/service sshd stop  意思是每天22：50关闭ssh服务 

      0 0 1,15 * * fsck /home  每月1号和15号检查/home 磁盘 

      1 * * * * /home/bruce/backup  每小时的第一分执行 /home/bruce/backup这个文件 

      00 03 * * 1-5 find /home "*.xxx" -mtime +4 -exec rm {} \;
      每周一至周五3点钟，在目录/home中，查找文件名为*.xxx的文件，并删除4天前的文件。

      3 0 6 */10 * * ls  意思是每月的1、11、21、31日是的6：30执行一次ls命令
      #+END_EXAMPLE


* 注意
   当程序在你所指定的时间执行后，系统会寄一封信给你，显示该程序执行的内容.
   若是你不希望收到这样的信，请在每一行空一格之后加上 > /dev/null 2>&1 即可


* 后记
任何系统管理员权限内的任务都必须位于 /etc 内，这是因为它们都是配置文件。如果您有一些需要以管理员身份每天(daily)、每周(weekly)或每月(monthly)运行的定时任务，请将它们放置在 /etc/cron.{daily,weekly,monthly} 中。它们将在 /etc/crontab 中被激活，然后按照文件名的字典顺序依次运行。

另一方面，如果您有某个定时任务 (a) 需要以某个特定的用户身份运行，或者 (b) 需要在某个特定时刻或以特定周期运行，您可以使用 /etc/crontab，或者更好的 /etc/cron.d/whatever。这些特殊的文件可以包含一个额外的域，允许您指定运行该定时任务的用户帐户。

在任何情况下，您只需编辑这些文件，cron 将会自动处理它们。没有必要再运行某个特殊的命令。欲了解更多的信息，请参阅 cron(8)、crontab(5) 和 /usr/share/doc/cron/README.Debian
