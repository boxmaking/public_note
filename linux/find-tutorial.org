#+SETUPFILE: ~/.emacs.d/org-other-file/org-level-1.org
#+TITLE: find-tutorial
#+KEYWORDS: linux-find, find
#+LANGUAGE: zh-CN


* find 常用命令

|----------------------------+---------------------------------|
| find _目录_ -cnewer _file_ | - 查找以下比file文件更新的文件- |
|                            |                                 |


* exec与xargs区别
** 两者都是对符合条件的文件执行所给的Linux 命令，而不询问用户是否需
要执行该命令。

 1. -exec：{}表示命令的参数即为所找到的文件,以；表示comman命令的结束。\是转义符，
   因为分号在命令中还有它用途，所以就用一个\来限定表示这是一个分号而不是表示其它意思。

 2. -ok： 和 -exec 的作用相同，格式也一样，只不过以一种更为安全的模式来执行该参数
   所给出的shell给出的这个命令之前，都会给出提示，让用户来确定是否执行。

 3. xargs 要结合管道来完成
   格式：find [option] express |xargs command

用一个实例来看看exec和xargs是如何传参数的：

#+BEGIN_SRC shell
$find test/ -type f
test/myfile.name
test/files/role_file
test/files/install_file

$find test/ -type f |xargs echo
test/myfile.name test/files/role_file test/files/install_file

$find test/ -type f -exec echo {} \;
test/myfile.name
test/files/role_file
test/files/install_file
#+END_SRC

很明显，exec是对每个找到的文件执行一次命令，除非这单个的文件名超过了几k，否则不
会出现命令行超长出报错的问题。

而xargs是把所有找到的文件名一股脑的转给命令。当文件很多时，这些文件名组合成的命
令行参数很容易超长，导致命令出错。

另外， find | xargs 这种组合在处理有空格字符的文件名时也会出错，因为这时执行的命令
已经不知道哪些是分割符、哪些是文件名中的空格！ 而用exec则不会有这个问题。


比如做个演示：

 #+BEGIN_SRC shell
 $touch test/'test zzh'

 $find test/ -name *zzh
 test/test zzh

 $find test/ -name *zzh |xargs rm
 rm: cannot remove `test/test': No such file or directory
 rm: cannot remove `zzh': No such file or directory

 $find test/ -name *zzh -exec rm {} \;
#+END_SRC


** 相比之下，也不难看出各自的缺点

1. exec 每处理一个文件或者目录，它都需要启动一次命令，效率不好;
2. exec 格式麻烦，必须用 {} 做文件的代位符，必须用 \; 作为命令的结束符，书写不便
3. xargs 不能操作文件名有空格的文件；

综上，如果要使用的命令支持一次处理多个文件，并且也知道这些文件里没有带空格的文件，
那么使用 xargs比较方便; 否则，就要用 exec了。
